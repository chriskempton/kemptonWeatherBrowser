<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources/ directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>

	<!-- Imports user-defined @Controller beans that process client requests -->
	<beans:import resource="controllers.xml" />
	
	<beans:bean name="executor" class="java.util.concurrent.Executors" factory-method="newCachedThreadPool" />
	
	<beans:bean class="org.cirrostratus.sequoia.servicelocator.ServiceLocator">
		<beans:constructor-arg type="java.lang.String" value="${AWS_ACCESS_KEY}" />
		<beans:constructor-arg type="java.lang.String" value="${AWS_SECRET_KEY}" />
	</beans:bean>
	
	
	<!-- this import will instantiate all of the library beans, such as WatchableRegistry and MyServiceWrapper -->
	<beans:import resource="classpath*:META-INF/spring/*.xml" />

	<beans:bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<beans:property name="ignoreUnresolvablePlaceholders" value="false"/>
		<beans:property name="locations">
			<beans:list>
				<beans:value>classpath:ec2.properties</beans:value>
			</beans:list>
		</beans:property>
	</beans:bean>
    
</beans:beans>
